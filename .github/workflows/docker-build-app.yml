name: Build Application

on:
  workflow_call:
    inputs:
      docker_image:
        required: true
        type: string
      docker_tag:
        required: true
        type: string
      cache_version:
        required: false
        type: string
        default: '1'

permissions:
  contents: read
  packages: write
  actions: write

jobs:
  build-app:
    name: Build Application
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Final Application Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        tags: ${{ inputs.docker_image }}:${{ inputs.docker_tag }}
        load: true
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BASE_IMAGE=ghcr.io/${{ github.repository }}/mongodb-server:latest
          CACHEBUST=${{ inputs.cache_version }}

    - name: Run container tests
      run: |
        # Start the container
        docker run -d -p 3000:3000 --name test-container ${{ inputs.docker_image }}:${{ inputs.docker_tag }}
        
        # Wait for MongoDB to start
        sleep 10
        
        # Check if MongoDB is running
        docker exec test-container mongosh --eval "db.runCommand({ ping: 1 })" || exit 1
        
        # Check if the server is responding
        curl -f http://localhost:3000 || exit 1
        
        # Clean up
        docker stop test-container
        docker rm test-container

